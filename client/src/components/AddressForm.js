import { useEffect, useMemo } from "react";
import { useForm } from "react-hook-form";
import { useLocation } from "react-router-dom";
import { usePayment } from "./context/PaymentContext";

const AddressForm = () => {
  const {
    register,
    handleSubmit,
    formState: { errors, isValid },
    watch
  } = useForm({ mode: "onChange" });
  const { cartDetails, updateAddress, updateFormValidity, updateShipping } = usePayment();
  const { pathname } = useLocation();
  // Watch all fields
  const watchedFields = watch();

  // Whenever watchedFields changes, update context
  useEffect(() => {
    // Only update when thereтАЩs some input
    Object.entries(watchedFields).forEach(([key, value]) => {
      if (value !== undefined) updateAddress(key, value);
    });
  }, [watchedFields, updateAddress]);

  useEffect(() => {
    updateFormValidity(isValid);
  }, [isValid, updateFormValidity]);

  // const onSubmit = (data) => {
  //   console.log("тЬЕ Address Data:", data);
  //   saveAddress(data);
  //   alert("Form submitted successfully!");
  // };

  useEffect(() => {
    window.scrollTo(0, 0);
    document.body.style.overflow = "auto";
    document.documentElement.style.overflow = "auto";
  }, [pathname]);

  useMemo(() => {
    const selectedState = watchedFields.state;
    const qty = cartDetails.qty || 1;

    let shipping = 0;

    // ЁЯУж Shipping rules
    if (selectedState && selectedState !== "TN" && qty > 10) {
      shipping = 80;
    } else if (selectedState && selectedState !== "TN" && qty <= 10) {
      shipping = 50;
    } else if (selectedState === "TN" && qty > 10) {
      shipping = 50;
    } else {
      shipping = 0;
    }

    updateShipping({
      ...cartDetails,
      shipping,
      // тЬЕ use subtotal, not total
    });

  }, [watchedFields.state, cartDetails.qty]);

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-100 p-4">
      <div className="w-full max-w-3xl bg-white rounded-2xl shadow-md p-6">
        {/* Header */}
        <h2 className="text-xl font-bold text-gray-800 mb-1">
          ЁЯУо 2026 роиро┐родрпНродро┐ро░ро╛ родрооро┐ро┤рпН роХро╛ро▓рогрпНроЯро░рпН рокрпЖро▒рпБро╡родро▒рпНроХрпБ роЙроЩрпНроХро│рпН роорпБроХро╡ро░ро┐ропрпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН
        </h2>
        <p className="text-gray-600 text-sm mb-6">
          роорпБроХро╡ро░ро┐ роЪрпЗрооро┐роХрпНроХрокрпНрокроЯрпНроЯро╡рпБроЯройрпН роЙроЯройрпЗ роХроЯрпНроЯрогроорпН роЪрпЖро▓рпБродрпНродро╡рпБроорпН рокроХрпНроХродрпНродро┐ро▒рпНроХрпБ рооро╛ро▒рпНро▒рпБро╡рпЛроорпН.
        </p>

        {/* Form */}
        <form
          className="grid grid-cols-1 md:grid-cols-2 gap-4"
        >
          {/* Full Name */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              роорпБро┤рпБ рокрпЖропро░рпН
            </label>
            <input
              type="text"
              {...register("fullName", { required: "роорпБро┤рпБ рокрпЖропро░рпН родрпЗро╡рпИропро╛роХрпБроорпН" })}
              placeholder="EX: ро░ро╛рооройрпН роЪрпБрокрпНрокро┐ро░роорогро┐ропроорпН"
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-violet-500"
            />
            {errors.fullName && (
              <p className="text-red-500 text-sm mt-1">
                {errors.fullName.message}
              </p>
            )}
          </div>

          {/* Mobile Number */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              роорпКрокрпИро▓рпН роОрогрпН
            </label>
            <input
              type="text"
              {...register("mobile", {
                required: "роорпКрокрпИро▓рпН роОрогрпН родрпЗро╡рпИропро╛роХрпБроорпН",
                pattern: {
                  value: /^[0-9]{10}$/,
                  message: "10 роЗро▓роХрпНроХ роорпКрокрпИро▓рпН роОрогрпН роороЯрпНроЯрпБроорпН роЙро│рпНро│ро┐роЯро╡рпБроорпН",
                },
              })}
              placeholder="10 роЗро▓роХрпНроХ роОрогрпН"
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-violet-500"
            />
            {errors.mobile && (
              <p className="text-red-500 text-sm mt-1">
                {errors.mobile.message}
              </p>
            )}
          </div>

          {/* Door / Flat / Building */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              Door / Flat / Building
            </label>
            <input
              type="text"
              {...register("building", { required: "роЗроирпНрод рокроХрпБродро┐ родрпЗро╡рпИропро╛роХрпБроорпН" })}
              placeholder="EX: 12A, ро╕рпНро░рпА роЕрокро╛ро░рпНроЯрпНроорпЖройрпНроЯрпН"
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-violet-500"
            />
            {errors.building && (
              <p className="text-red-500 text-sm mt-1">
                {errors.building.message}
              </p>
            )}
          </div>

          {/* Street / Area / Road */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              Street / Area / Road
            </label>
            <input
              type="text"
              {...register("street", { required: "родрпЖро░рпБ / рокроХрпБродро┐ родрпЗро╡рпИропро╛роХрпБроорпН" })}
              placeholder="EX: ро░ро╛роЬро╛роЬро┐ роЪро╛ро▓рпИ"
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-violet-500"
            />
            {errors.street && (
              <p className="text-red-500 text-sm mt-1">
                {errors.street.message}
              </p>
            )}
          </div>

          {/* Town / City */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              Town / City
            </label>
            <input
              type="text"
              {...register("city", { required: "роироХро░роорпН родрпЗро╡рпИропро╛роХрпБроорпН" })}
              placeholder="EX: родро┐ро░рпБроЪрпНроЪро┐"
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-violet-500"
            />
            {errors.city && (
              <p className="text-red-500 text-sm mt-1">
                {errors.city.message}
              </p>
            )}
          </div>

          {/* District */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              District
            </label>
            <input
              type="text"
              {...register("district", { required: "рооро╛ро╡роЯрпНроЯроорпН родрпЗро╡рпИропро╛роХрпБроорпН" })}
              placeholder="EX: родро┐ро░рпБроЪрпНроЪро┐ рооро╛ро╡роЯрпНроЯроорпН"
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-violet-500"
            />
            {errors.district && (
              <p className="text-red-500 text-sm mt-1">
                {errors.district.message}
              </p>
            )}
          </div>

          {/* Landmark */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              Landmark (ро╡ро┐ро░рпБрокрпНрокроорпН)
            </label>
            <input
              type="text"
              {...register("landmark")}
              placeholder="EX: рокро╕рпН ро╕рпНроЯро╛рогрпНроЯрпН рокроХрпНроХродрпНродро┐ро▓рпН"
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-violet-500"
            />
          </div>

          {/* Pincode */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              роЕроЮрпНроЪро▓рпН роОрогрпН (Pincode)
            </label>
            <input
              type="text"
              {...register("pincode", {
                required: "роЕроЮрпНроЪро▓рпН роОрогрпН родрпЗро╡рпИропро╛роХрпБроорпН",
                pattern: {
                  value: /^[0-9]{6}$/,
                  message: "6 роЗро▓роХрпНроХ роЕроЮрпНроЪро▓рпН роОрогрпН роороЯрпНроЯрпБроорпН роЙро│рпНро│ро┐роЯро╡рпБроорпН",
                },
              })}
              placeholder="6 роЗро▓роХрпНроХ PIN"
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-violet-500"
            />
            {errors.pincode && (
              <p className="text-red-500 text-sm mt-1">
                {errors.pincode.message}
              </p>
            )}
          </div>

          {/* State */}
          <div className="md:col-span-2">
            <label className="block text-sm font-medium text-gray-700 mb-1">
              рооро╛роиро┐ро▓роорпН (State)
            </label>
            <select
              {...register("state", { required: "рооро╛роиро┐ро▓роорпН родрпЗро╡рпИропро╛роХрпБроорпН" })}
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-violet-500"
            >
              <option value="">-- рооро╛роиро┐ро▓родрпНродрпИ родрпЗро░рпНро╡рпБ роЪрпЖропрпНропро╡рпБроорпН --</option>
              <option value="TN">Tamil Nadu</option>
              <option value="KA">Karnataka</option>
              <option value="KL">Kerala</option>
              <option value="AP">Andhra Pradesh</option>
              <option value="TE">Telangana</option>
            </select>
            {errors.state && (
              <p className="text-red-500 text-sm mt-1">
                {errors.state.message}
              </p>
            )}
          </div>

          {/* Submit Button
          <div className="md:col-span-2 mt-4">
            <button
              type="submit"
              className="w-full bg-violet-600 text-white font-semibold py-2 rounded-lg hover:bg-violet-700 transition"
            >
              роорпБроХро╡ро░ро┐ роЪрооро░рпНрокрпНрокро┐роХрпНроХро╡рпБроорпН
            </button>
          </div> */}
        </form>

        {/* Order Summary */}
        <div className="bg-slate-50 rounded-2xl shadow-md p-3 border border-gray-200 mt-4">
          <div className="bg-white rounded-2xl shadow-md p-6 border border-gray-200">
            <h3 className="font-bold text-gray-800 text-lg mb-4">
              ЁЯУС Order Summary
            </h3>

            <div className="flex justify-between items-center text-gray-700 mb-2">
              <span>ЁЯТ░ Calendar Amount</span>
              <span className="font-semibold">тВ╣{cartDetails.total}</span>
            </div>

            <div className="flex justify-between items-center text-gray-700 mb-2">
              <span>ЁЯЪЪ Shipping Amount</span>
              <span className="font-semibold">тВ╣{cartDetails.shipping}</span>
            </div>

            <div className="flex justify-between items-center font-bold text-gray-900 text-lg mt-4 mb-4">
              <span>ЁЯУЕ роорпКродрпНродроорпН (Total)</span>
              <span>тВ╣{cartDetails.total + cartDetails.shipping}</span>
            </div>

            <p className="text-gray-600 text-sm leading-relaxed">
              родрооро┐ро┤рпНроиро╛роЯрпБ роорпБро┤рпБро╡родрпБроорпН 10 роХро╛ро▓рогрпНроЯро░рпН ро╡ро░рпИ Order роЪрпЖропрпНродро╛ро▓рпН Shipping Charges
              роЗро▓рпНро▓рпИ. роЕродро▒рпНроХрпБ роорпЗро▓рпН Order роЪрпЖропрпНродро╛ро▓рпН Rs.50 (Shipping Charges)
              ро╡роЪрпВро▓ро┐роХрпНроХрокрпНрокроЯрпБроорпН. рокро┐ро▒ рооро╛роиро┐ро▓роЩрпНроХро│рпБроХрпНроХрпБ 10 роХро╛ро▓рогрпНроЯро░рпН ро╡ро░рпИ Order роЪрпЖропрпНродро╛ро▓рпН
              Rs.50 (Shipping Charges), роЕродро▒рпНроХрпБ роорпЗро▓рпН Order роЪрпЖропрпНродро╛ро▓рпН Rs.80 (Shipping
              Charges) ро╡роЪрпВро▓ро┐роХрпНроХрокрпНрокроЯрпБроорпН.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AddressForm;
